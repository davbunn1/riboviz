adapters: CTGTAGGCACC # Illumina sequencing adapter(s) to remove
asite_disp_length_file: data/yeast_standard_asite_disp_length.txt # Table of fixed A-site positions by read length
buffer: 250 # Length of flanking region around the CDS
build_indices: TRUE # Build indices for aligner? if TRUE, remake indices from fasta files
codon_positions_file: data/yeast_codon_pos_i200.RData # Codon positions in each gene
count_reads: TRUE # Scan input, temporary and output files and produce counts of reads in each FASTQ, SAM, and BAM file processed?
count_threshold: 64 # Remove genes with a read count below this threshold, when generating statistics and figures
dataset: vignette # Dataset name
dedup_stats: FALSE # Output UMI deduplication statistics?
dedup_umis: FALSE # Extract UMIs and deduplicate reads if TRUE
dir_index: remote-vignette/index # Built indices directory
dir_in: remote-vignette/input # Input directory
dir_out: remote-vignette/output # Output directory
dir_tmp: remote-vignette/tmp # Intermediate files directory
output_metagene_normalized_profile: TRUE # Calculate position-specific nucleotide frequency?
extract_umis: FALSE # Extract UMIs if TRUE
feature: CDS # Feature type
features_file: data/yeast_features.tsv # Features to correlate with ORFs
fq_files: # fastq files to be processed, relative to dir_in
  WTnone: SRR1042855_s1mi.fastq.gz
  WT3AT: SRR1042864_s1mi.fastq.gz
  NotHere: example_missing_file.fastq.gz # Test case for missing file
group_umis: FALSE # Summarise UMI groups before and after deduplication, if TRUE
hisat2_orf_params: -k 2 --no-spliced-alignment --rna-strandness F --no-unal # hisat2ORF parameters
is_riboviz_gff: TRUE # Does the GFF file contain 3 elements per gene - UTR5, CDS, and UTR3
make_bedgraph: TRUE # Output bedgraph files, as TSV, in addition to h5?
max_read_length: 50 # Maximum read length in H5 output
min_read_length: 10 # Minimum read length in H5 output
multiplex_fq_files: null # Multiplexed fastq files to be processed, relative to dir_in
num_processes: 1 # Number of processes to parallelize over
orf_fasta_file: remote-vignette/input/yeast_YAL_CDS_w_250utrs.fa # ORF file to align to
orf_gff_file: remote-vignette/input/yeast_YAL_CDS_w_250utrs.gff3  # GFF2/GFF3 file for ORFs
orf_index_prefix: YAL_CDS_w_250 # ORF index file prefix, relative to dir_index
output_pdfs: TRUE # generate .pdfs for sample-related plots 
primary_id: Name # Primary gene IDs to access the data (YAL001C, YAL003W, etc.)
rpf: TRUE # Is the dataset an RPF or mRNA dataset?
rrna_fasta_file: remote-vignette/input/yeast_rRNA_R64-1-1.fa # rRNA file to avoid aligning to
rrna_index_prefix: yeast_rRNA # rRNA index file prefix, relative to dir_index
run_static_html: TRUE # Create static html visualization per sample?
sample_sheet: null # Sample sheet, TSV file with, at least, SampleID and TagRead (barcode) columns
samsort_memory: null # Memory to give to 'samtools sort'
secondary_id: NULL # Secondary gene IDs to access the data (COX1, EFB1, etc.)
stop_in_feature: FALSE # Are stop codons part of the feature annotations in GFF?
t_rna_file: data/yeast_tRNAs.tsv # tRNA estimates
umi_regexp: null # UMI-tools-compliant regular expression to extract UMIs
